name: Build nix

on:
  push:
    branches: [master]

  workflow_dispatch:

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  build_nix:
    name: Build nix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build docker image
        run: |
          nix build .#libnode-docker

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image to DockerHub
        run: |
          docker load < result
          docker tag libnode-docker:latest ghcr.io/sigmagmbh/dotnet-libnode-docker:latest
          docker push ghcr.io/sigmagmbh/dotnet-libnode-docker:latest
          

  test_image:
    needs: build_nix
    name: Test image
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        dotnet-version: [ '8.x' ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          tags: test-image:latest
          push: false
          load: true

      - name: Run image
        run: |
          docker run test-image:latest
